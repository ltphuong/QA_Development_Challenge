plugins {
    id 'java'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.1.23"
}

group 'api-automation-framework '
version '1.0-SNAPSHOT'

wrapper {
    gradleVersion = '7.0'
}

repositories {
    mavenCentral()
}

dependencies {
    //Test NG
    // https://mvnrepository.com/artifact/org.testng/testng
    testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'

    // Cucumber
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-java
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '6.10.3'

    // Cucumber core
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-core
    implementation group: 'io.cucumber', name: 'cucumber-core', version: '6.10.3'

    // Cucumber-testNG
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-testng
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: '6.10.3'

    // cucumber-guice
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-guice
    implementation group: 'io.cucumber', name: 'cucumber-guice', version: '6.10.3'

    // Using Guice for dependency injection
    // https://mvnrepository.com/artifact/com.google.inject/guice
    implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'

    // Using webdrivermanager for auto downloading and initializing web driver
    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.4.0'

    // Selenium for Java
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    // Core Jackson processing abstractions (aka Streaming API), implementation for JSON
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.3'

    // RestAssured used in API test
    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'

    // Use slf4j for logging
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    // Simple Json for handling JSONObject
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    implementation files("resources/test")
}

cucumberReports {
    outputDir = file('htmlReport/cucumber-report-default')
    buildId = '1.0'
    reports = files('htmlReport/cucumber.json')
    projectNameOverride = 'QA Development Challenge'
}

test {
    // Create gradle wrapper if needed
    dependsOn wrapper

    // Transmit system properties, e.g. via execution command line so they could be accessed inside Java code
    systemProperties(System.getProperties())

    // Retrieve test suite file from command line, e.g: gradle test -DtestSuite=src/test/resources/API.xml
    def testSuite = System.properties.getProperty("testSuite", 'src/test/resources/testng/testNG.xml')
    def threads = System.properties.getProperty("threads", "1")

    useTestNG(){
        jvmArgs(["-Ddataproviderthreadcount=${threads}"])
        suites testSuite
    }
    scanForTestClasses = false
}
